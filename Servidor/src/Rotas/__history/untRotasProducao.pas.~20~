unit untRotasProducao;

interface

uses
  System.SysUtils, Horse, untController, System.JSON,
  DataSet.Serialize, System.Generics.Collections;

var
  Controller: TController;
  procedure Control(Horse: THorse);

  procedure getDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure getByID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure insertDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure deleteDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
  procedure updateDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);

implementation

procedure Control(Horse: THorse);
begin
  Horse.Get('/producoes', getDados);
  Horse.Get('/producoes/producao', getByID);
  Horse.Post('/producoes', insertDados);
  Horse.Delete('/producoes', deleteDados);
  Horse.Put('/producoes', updateDados);
end;

procedure getDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  tabelaBanco: string;
begin
  tabelaBanco := req.Headers.Items['tabelaBanco'];

  Controller := TController.Create;
  Res.Send<TJSONArray>(Controller.getDados(tabelaBanco).ToJSONArray);
  Controller.Free;
end;

procedure getByID(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  tabelaBanco: string;
  id: integer;
  campo: string;
begin
  id := StrToInt(Req.Headers.Items['id']);
  tabelaBanco := Req.Headers.Items['tabelaBanco'];
  campo := Req.Headers.Items['campo'];

  Controller := TController.Create;
  Res.Send<TJSONValue>(Controller.getByID(id, tabelaBanco, campo));
  Controller.Free;
end;

procedure insertDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
begin
  Controller := TController.Create;
  Controller.setDados(Req.Body<TJSONObject>, Req.Body<TJSONObject>.GetValue<string>('tabelaBanco'));
  Controller.Free;
end;

procedure deleteDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
begin
  Controller := TController.Create;
  Controller.deletarDados(req.Params['id'].ToInteger, 'tab_contaspagar');
  Controller.Free;
end;

procedure updateDados(Req: THorseRequest; Res: THorseResponse; Next: TProc);
var
  dados: TJSONObject;
  id: integer;
  tabelaBanco: string;
begin
  dados := TJSONObject.Create;

  dados := Req.Body<TJSONObject>;
  id := Req.Body<TJSONObject>.GetValue<integer>('id');
  tabelaBanco := Req.Body<TJSONObject>.GetValue<string>('tabelaBanco');

  Controller := TController.Create;
  Controller.updateDados(dados, id, tabelaBanco);
  Controller.Free;
end;

end.
